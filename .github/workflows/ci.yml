name: ci

on:
  push:
    branches: [main]
  pull_request:

jobs:
  unittests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.12", "3.11", "3.10", "3.9", "3.8"]
        extras: ["", all, soap_api, orjson, cli]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: ASDF Parse
        uses: kota65535/github-asdf-parse-action@v2.0.0
        id: versions
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
          architecture: x64
      - uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: "${{ steps.versions.outputs.poetry }}"
      - run: poetry install --extras ${{ matrix.extras }}
        if: matrix.extras != ''
      - run: poetry install
        if: matrix.extras == ''
      - run: poetry run pytest -v

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: ASDF Parse
        uses: kota65535/github-asdf-parse-action@v2.0.0
        id: versions
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ steps.versions.outputs.python }}"
          architecture: x64
      - uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: "${{ steps.versions.outputs.poetry }}"
      - run: poetry install --extras all
      - run: poetry run flake8
      - run: poetry run mypy --ignore-missing-imports .
      - run: poetry run isort --check --diff .
      - run: poetry run black --check --diff .
